name: CI build

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*.*.*'

  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  ARTIFACT_NAME: scale-linux.zip

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install
      # install to /home/runner/work/ascale/ascale/bin/Fee
      run: make install
      working-directory: ${{github.workspace}}/build
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: ZIP
      run: |
        zip -r ${{env.ARTIFACT_NAME}} ${{github.workspace}}/bin/
        mkdir $GITHUB_WORKSPACE/artifacts
        cp ${{env.ARTIFACT_NAME}} $GITHUB_WORKSPACE/artifacts/

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: artifacts
        
    

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          artifacts/${{env.ARTIFACT_NAME}}
          LICENSE

